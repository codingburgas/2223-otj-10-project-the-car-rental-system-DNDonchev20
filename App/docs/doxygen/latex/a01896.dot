digraph "sf::NonCopyable"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="sf::NonCopyable",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Utility class that makes any derived class non-copyable."];
  Node1 -> Node2 [id="edge24_Node000001_Node000002",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="sf::Context",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01965.html",tooltip="Class holding a valid drawing context."];
  Node1 -> Node3 [id="edge25_Node000001_Node000003",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="sf::Cursor",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01973.html",tooltip="Cursor defines the appearance of a system cursor."];
  Node1 -> Node4 [id="edge26_Node000001_Node000004",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="sf::FileInputStream",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01877.html",tooltip="Implementation of input stream based on a file."];
  Node1 -> Node5 [id="edge27_Node000001_Node000005",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="sf::Ftp",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01813.html",tooltip="A FTP client."];
  Node1 -> Node6 [id="edge28_Node000001_Node000006",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="sf::GlResource::Transient\lContextLock",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a02037.html",tooltip="RAII helper class to temporarily lock an available context for use."];
  Node1 -> Node7 [id="edge29_Node000001_Node000007",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="sf::Http",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01829.html",tooltip="A HTTP client."];
  Node1 -> Node8 [id="edge30_Node000001_Node000008",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="sf::InputSoundFile",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01605.html",tooltip="Provide read access to sound files."];
  Node1 -> Node9 [id="edge31_Node000001_Node000009",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="sf::Lock",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01885.html",tooltip="Automatic wrapper for locking and unlocking mutexes."];
  Node1 -> Node10 [id="edge32_Node000001_Node000010",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="sf::Mutex",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01893.html",tooltip="Blocks concurrent access to shared resources from multiple threads."];
  Node1 -> Node11 [id="edge33_Node000001_Node000011",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="sf::OutputSoundFile",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01621.html",tooltip="Provide write access to sound files."];
  Node1 -> Node12 [id="edge34_Node000001_Node000012",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="sf::RenderTarget",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01749.html",tooltip="Base class for all render targets (window, texture, ...)"];
  Node12 -> Node13 [id="edge35_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="sf::RenderTexture",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01757.html",tooltip="Target for off-screen 2D rendering into a texture."];
  Node12 -> Node14 [id="edge36_Node000012_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="sf::RenderWindow",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01761.html",tooltip="Window that can serve as a target for 2D drawing."];
  Node1 -> Node15 [id="edge37_Node000001_Node000015",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="sf::Shader",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01765.html",tooltip="Shader class (vertex, geometry and fragment)"];
  Node1 -> Node16 [id="edge38_Node000001_Node000016",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="sf::Socket",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01849.html",tooltip="Base class for all the socket types."];
  Node16 -> Node17 [id="edge39_Node000016_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="sf::TcpListener",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01857.html",tooltip="Socket that listens to new TCP connections."];
  Node16 -> Node18 [id="edge40_Node000016_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="sf::TcpSocket",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01861.html",tooltip="Specialized socket using the TCP protocol."];
  Node16 -> Node19 [id="edge41_Node000016_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="sf::UdpSocket",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01869.html",tooltip="Specialized socket using the UDP protocol."];
  Node1 -> Node20 [id="edge42_Node000001_Node000020",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="sf::Thread",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01905.html",tooltip="Utility class to manipulate threads."];
  Node1 -> Node21 [id="edge43_Node000001_Node000021",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="sf::ThreadLocal",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01925.html",tooltip="Defines variables with thread-local storage."];
  Node21 -> Node22 [id="edge44_Node000021_Node000022",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="sf::ThreadLocalPtr\< T \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a01929.html",tooltip="Pointer to a thread-local variable."];
  Node1 -> Node23 [id="edge45_Node000001_Node000023",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="sf::Window",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$a02069.html",tooltip="Window that serves as a target for OpenGL rendering."];
  Node23 -> Node14 [id="edge46_Node000023_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
