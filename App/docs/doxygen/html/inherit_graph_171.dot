digraph "Graphical Class Hierarchy"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node0 [id="Node000000",label="sf::Drawable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01693.html",tooltip="Abstract base class for objects that can be drawn to a render target."];
  Node0 -> Node1 [id="edge38_Node000000_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 [id="Node000001",label="sf::Shape",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01773.html",tooltip="Base class for textured shapes with outline."];
  Node1 -> Node2 [id="edge39_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="sf::CircleShape",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01681.html",tooltip="Specialized shape representing a circle."];
  Node1 -> Node3 [id="edge40_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="sf::ConvexShape",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01689.html",tooltip="Specialized shape representing a convex polygon."];
  Node1 -> Node4 [id="edge41_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="sf::RectangleShape",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01741.html",tooltip="Specialized shape representing a rectangle."];
  Node0 -> Node6 [id="edge42_Node000000_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="sf::Sprite",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01777.html",tooltip="Drawable representation of a texture, with its own transformations, color, etc."];
  Node0 -> Node7 [id="edge43_Node000000_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="sf::Text",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01781.html",tooltip="Graphical text that can be drawn to a render target."];
  Node0 -> Node8 [id="edge44_Node000000_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="sf::VertexArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01801.html",tooltip="Define a set of one or more 2D primitives."];
  Node0 -> Node9 [id="edge45_Node000000_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="sf::VertexBuffer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01805.html",tooltip="Vertex buffer storage for one or more 2D primitives."];
  Node10 [id="Node000010",label="sf::GlResource",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a02033.html",tooltip="Base class for classes that require an OpenGL context."];
  Node10 -> Node11 [id="edge46_Node000010_Node000011",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="sf::Context",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01965.html",tooltip="Class holding a valid drawing context."];
  Node10 -> Node28 [id="edge47_Node000010_Node000028",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="sf::Shader",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01765.html",tooltip="Shader class (vertex, geometry and fragment)"];
  Node10 -> Node36 [id="edge48_Node000010_Node000036",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="sf::Texture",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01785.html",tooltip="Image living on the graphics card that can be used for drawing."];
  Node10 -> Node9 [id="edge49_Node000010_Node000009",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node10 -> Node27 [id="edge50_Node000010_Node000027",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="sf::Window",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a02069.html",tooltip="Window that serves as a target for OpenGL rendering."];
  Node27 -> Node26 [id="edge51_Node000027_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="sf::RenderWindow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01761.html",tooltip="Window that can serve as a target for 2D drawing."];
  Node15 [id="Node000015",label="sf::InputStream",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01881.html",tooltip="Abstract class for custom file input streams."];
  Node15 -> Node14 [id="edge52_Node000015_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="sf::FileInputStream",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01877.html",tooltip="Implementation of input stream based on a file."];
  Node15 -> Node16 [id="edge53_Node000015_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="sf::MemoryInputStream",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01889.html",tooltip="Implementation of input stream based on a memory chunk."];
  Node12 [id="Node000012",label="sf::NonCopyable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01897.html",tooltip="Utility class that makes any derived class non-copyable."];
  Node12 -> Node11 [id="edge54_Node000012_Node000011",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node12 -> Node13 [id="edge55_Node000012_Node000013",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="sf::Cursor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01973.html",tooltip="Cursor defines the appearance of a system cursor."];
  Node12 -> Node14 [id="edge56_Node000012_Node000014",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node12 -> Node17 [id="edge57_Node000012_Node000017",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="sf::Ftp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01813.html",tooltip="A FTP client."];
  Node12 -> Node18 [id="edge58_Node000012_Node000018",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="sf::GlResource::Transient\lContextLock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a02037.html",tooltip="RAII helper class to temporarily lock an available context for use."];
  Node12 -> Node19 [id="edge59_Node000012_Node000019",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="sf::Http",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01829.html",tooltip="A HTTP client."];
  Node12 -> Node20 [id="edge60_Node000012_Node000020",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="sf::InputSoundFile",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01605.html",tooltip="Provide read access to sound files."];
  Node12 -> Node21 [id="edge61_Node000012_Node000021",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="sf::Lock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01885.html",tooltip="Automatic wrapper for locking and unlocking mutexes."];
  Node12 -> Node22 [id="edge62_Node000012_Node000022",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="sf::Mutex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01893.html",tooltip="Blocks concurrent access to shared resources from multiple threads."];
  Node12 -> Node23 [id="edge63_Node000012_Node000023",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="sf::OutputSoundFile",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01621.html",tooltip="Provide write access to sound files."];
  Node12 -> Node24 [id="edge64_Node000012_Node000024",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="sf::RenderTarget",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01749.html",tooltip="Base class for all render targets (window, texture, ...)"];
  Node24 -> Node25 [id="edge65_Node000024_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="sf::RenderTexture",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01757.html",tooltip="Target for off-screen 2D rendering into a texture."];
  Node24 -> Node26 [id="edge66_Node000024_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node28 [id="edge67_Node000012_Node000028",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node12 -> Node29 [id="edge68_Node000012_Node000029",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="sf::Socket",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01849.html",tooltip="Base class for all the socket types."];
  Node29 -> Node30 [id="edge69_Node000029_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="sf::TcpListener",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01857.html",tooltip="Socket that listens to new TCP connections."];
  Node29 -> Node31 [id="edge70_Node000029_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="sf::TcpSocket",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01861.html",tooltip="Specialized socket using the TCP protocol."];
  Node29 -> Node32 [id="edge71_Node000029_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="sf::UdpSocket",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01869.html",tooltip="Specialized socket using the UDP protocol."];
  Node12 -> Node33 [id="edge72_Node000012_Node000033",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="sf::Thread",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01905.html",tooltip="Utility class to manipulate threads."];
  Node12 -> Node34 [id="edge73_Node000012_Node000034",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="sf::ThreadLocal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01925.html",tooltip="Defines variables with thread-local storage."];
  Node34 -> Node35 [id="edge74_Node000034_Node000035",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="sf::ThreadLocalPtr\< T \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01929.html",tooltip="Pointer to a thread-local variable."];
  Node12 -> Node27 [id="edge75_Node000012_Node000027",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="sf::Transformable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01793.html",tooltip="Decomposed transform defined by a position, a rotation and a scale."];
  Node5 -> Node1 [id="edge76_Node000005_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node6 [id="edge77_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node7 [id="edge78_Node000005_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
